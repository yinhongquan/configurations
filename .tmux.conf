# add support for tmuxinator
# start window numbering at 1
set -g base-index 1

# start pane numbering at 1
set -g pane-base-index 1

# end support for tmuxinator

setw -g mode-keys vi

set -g default-terminal "screen-256color"

# more VI-like copy/paste (http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/)
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# when sharing a session, don't lock entire session to shared screen size
setw -g aggressive-resize on

# VI for splitting
bind s split-window -v
bind v split-window -h

# VI for switching between
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# make it easy to grab a pane and put it into the current window
bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"

# remotecopy the most recent buffer
bind-key y save-buffer ~/.tmux-buffer \; run-shell "remotecopy foo || true" \; command-prompt -p "secret:" "run-shell \"cat ~/.tmux-buffer | remotecopy -s %%\""
bind-key ] select-layout even-horizontal \; resize-pane -t 1 -x 80

# binding to clear activity alerts
bind-key C run-shell tmux-clear-activity

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# switch " over to selecting windows
unbind '"'
bind-key '"' choose-window

# use ' to switch between sessions
bind-key "'" choose-session

# -- display -------------------------------------------------------------------
# number windows from 1
set -g base-index 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
# renumber windows when a window is closed, tmux > 1.6
if '[ $(echo "$(tmux -V | cut -d' ' -f 2) > 1.6" | bc) -eq 1 ]' 'set -g renumber-windows on'

# don't wait after escape
set -s escape-time 0

## setting up status bar
## mostly horked from http://www.linuxized.com/2010/05/switching-from-gnu-screen-to-tmux/

set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left
set-option -g status-bg colour16
set-option -g status-fg white
set-option -g status-left-length 40

setw -g window-status-bg colour16
setw -g window-status-fg white
setw -g window-status-current-fg colour46

setw -g window-status-activity-attr default
setw -g window-status-activity-fg colour192
setw -g window-status-activity-bg colour16

# monitor activity
setw -g monitor-activity on
set -g visual-activity on

#
# style
set-option -g status-keys vi
set-window-option -g mode-keys vi
set-window-option -g utf8 on

#handle mouse events
setw -g mode-mouse off
#configure tmux, so it will let us use the
#mouse to select a pane, resize a pane, or
#even let us click on the window list to select
#a window
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

#set for active pane border color
# general
set-option -g history-limit 65535

## time
set-option -g display-time 5000 # message display time in (ms), should long enough
set-option -g repeat-time 1000 # lasting time (ms) between a repeatable command
set-option -sg escape-time 1 # waiting time (ms) after prefix, small for more responsitive
set-option -g default-terminal "screen-256color"

## style
set-option -g status-keys vi
set-window-option -g mode-keys vi
set-window-option -g utf8 on

## modify prefix to activate tmux
set-option -g prefix C-w
unbind-key C-b
bind-key C-w send-prefix

# control sessions
bind-key z kill-session

## split window
unbind '"'
bind - splitw -v # vertical split (prefix -)
unbind %
bind | splitw -h # horizontal split (prefix |)

## select pane (move like vim)
bind -r k select-pane -U # above (prefix k)
bind -r j select-pane -D # below (prefix j)
bind -r h select-pane -L # left (prefix h)
bind -r l select-pane -R # right (prefix l)
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

## resize pane
bind -r ^k resizep -U 1  # upward (prefix Ctrl+k)
bind -r ^j resizep -D 1  # downward (prefix Ctrl+j)
bind -r ^h resizep -L 1  # to the left (prefix Ctrl+h)
bind -r ^l resizep -R 1  # to the right (prefix Ctrl+l)

## easy to swich window, like byobu
bind-key -n F2 new-window
bind-key -n F3 previous-window
bind-key -n F4 next-window

## color
set -g status-fg white
set -g status-bg black
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
set -g message-fg white
set -g message-bg black
set -g message-attr bright

## status bar
set-option -g status-utf8 on
set -g status-interval 60
set -g status-left "#[fg=green]Session: #S #[fg=yellow]Window: #I #[fg=cyan]Pane: #P"
set -g status-left-length 30
set-option -g status-right "#[fg=cyan]#(date +%H:%M' ')" # right part: time lisk 23:59
set-option -g status-right-length 10 # more space left for center part (window names)
set -g status-justify centre

# tmux theme, colors and status line
# available themes:
#   - powerline (a powerline inspired theme)
#   - powerline_patched_font (a powerline inspired theme using a patched font)
tmux_conf_theme=powerline

# set default shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# getting tmux to copy a buffer to system clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh" # or bash...
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to system clipboard"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
